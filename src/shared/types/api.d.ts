/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v1/cards/search": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * 카드 검색
     * @description 카드 검색 페이지에서 검색 결과를 반환합니다.
     */
    post: operations["searchCards"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tags": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getTags"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/posts": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getPostList"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/cards": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * 카드 리스트
     * @description 메인페이지의 카드 개수가 15개인 것을 고려하여 15개의 카드 정보를 반환합니다.
     */
    get: operations["getCardList"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    AnnualFeeRange: {
      /** Format: int32 */
      min?: number;
      /** Format: int32 */
      max?: number;
    };
    CardSearchRequestDto: {
      filters?: components["schemas"]["Filters"];
    };
    Filters: {
      tagIds?: string[];
      annualFeeRange?: components["schemas"]["AnnualFeeRange"];
    };
    ApiResponseCardSearchResponseDto: {
      code?: string;
      message?: string;
      data?: components["schemas"]["CardSearchResponseDto"];
    };
    CardBenefitDto: {
      title?: string;
      details?: string;
    };
    CardSearchResponseDto: {
      mainCard?: components["schemas"]["SearchedCardDto"];
      recommendationCategoriesDto?: components["schemas"]["RecommendationCategoriesDto"];
      otherRecommendationCards?: components["schemas"]["SearchedCardDto"][];
    };
    RecommendationCategoriesDto: {
      selectedFilters?: components["schemas"]["SelectedFilters"];
      recommendedStyle?: components["schemas"]["RecommendedStyle"];
    };
    RecommendedStyle: {
      title?: string;
      icon?: string;
      description?: string;
      additionalInfo?: string;
    };
    SearchedCardDto: {
      id?: string;
      name?: string;
      imageUrl?: string;
      /** @enum {string} */
      paymentNetwork?: "VISA" | "MASTER" | "AMEX";
      benefits?: components["schemas"]["CardBenefitDto"][];
      buttonNode?: string;
    };
    SelectedFilters: {
      title?: string;
      icon?: string;
      description?: string;
      tags?: string[];
    };
    ApiResponseListTagCategoryGroupDto: {
      code?: string;
      message?: string;
      data?: components["schemas"]["TagCategoryGroupDto"][];
    };
    TagCategoryGroupDto: {
      category?: string;
      tags?: components["schemas"]["TagResponseDto"][];
    };
    TagResponseDto: {
      tagId?: string;
      category?: string;
      name?: string;
      hoverText?: string;
      /** Format: int32 */
      displayOrder?: number;
    };
    ApiResponseListPostResponseDto: {
      code?: string;
      message?: string;
      data?: components["schemas"]["PostResponseDto"][];
    };
    PostResponseDto: {
      imageUrl?: string;
      title?: string;
    };
    ApiResponseListCardBrandGroupDto: {
      code?: string;
      message?: string;
      data?: components["schemas"]["CardBrandGroupDto"][];
    };
    CardBrandGroupDto: {
      brand?: string;
      cards?: components["schemas"]["CardResponseDto"][];
    };
    CardResponseDto: {
      imageUrl?: string;
      name?: string;
      description?: string;
      brand?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  searchCards: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CardSearchRequestDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseCardSearchResponseDto"];
        };
      };
    };
  };
  getTags: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseListTagCategoryGroupDto"];
        };
      };
    };
  };
  getPostList: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseListPostResponseDto"];
        };
      };
    };
  };
  getCardList: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "*/*": components["schemas"]["ApiResponseListCardBrandGroupDto"];
        };
      };
    };
  };
}
